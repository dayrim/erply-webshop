{"remainingRequest":"C:\\Users\\Dmitrijs\\erply-webshop\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!C:\\Users\\Dmitrijs\\erply-webshop\\node_modules\\ngx-webstorage\\dist\\helpers\\keyStorage.js","dependencies":[{"path":"C:\\Users\\Dmitrijs\\erply-webshop\\node_modules\\ngx-webstorage\\dist\\helpers\\keyStorage.js","mtime":1512224934000},{"path":"C:\\Users\\Dmitrijs\\erply-webshop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1530819274189},{"path":"C:\\Users\\Dmitrijs\\erply-webshop\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1528256844000}],"contextDependencies":[],"result":["import { LIB_KEY, LIB_KEY_CASE_SENSITIVE, LIB_KEY_SEPARATOR } from '../constants/lib';\r\nvar CUSTOM_LIB_KEY = LIB_KEY;\r\nvar CUSTOM_LIB_KEY_SEPARATOR = LIB_KEY_SEPARATOR;\r\nvar CUSTOM_LIB_KEY_CASE_SENSITIVE = LIB_KEY_CASE_SENSITIVE;\r\nexport function isManagedKey(sKey) {\r\n    return sKey.indexOf(CUSTOM_LIB_KEY + CUSTOM_LIB_KEY_SEPARATOR) === 0;\r\n}\r\nvar KeyStorageHelper = /*@__PURE__*/ (function () {\r\n    function KeyStorageHelper() {\r\n    }\r\n    KeyStorageHelper.isManagedKey = function (sKey) {\r\n        return sKey.indexOf(CUSTOM_LIB_KEY + CUSTOM_LIB_KEY_SEPARATOR) === 0;\r\n    };\r\n    KeyStorageHelper.retrieveKeysFromStorage = function (storage) {\r\n        return Object.keys(storage).filter(isManagedKey);\r\n    };\r\n    KeyStorageHelper.genKey = function (raw) {\r\n        if (typeof raw !== 'string')\r\n            throw Error('attempt to generate a storage key with a non string value');\r\n        return \"\" + CUSTOM_LIB_KEY + CUSTOM_LIB_KEY_SEPARATOR + this.formatKey(raw);\r\n    };\r\n    KeyStorageHelper.formatKey = function (raw) {\r\n        var key = raw.toString();\r\n        return CUSTOM_LIB_KEY_CASE_SENSITIVE ? key : key.toLowerCase();\r\n    };\r\n    KeyStorageHelper.setStorageKeyPrefix = function (key) {\r\n        if (key === void 0) {\r\n            key = LIB_KEY;\r\n        }\r\n        CUSTOM_LIB_KEY = key;\r\n    };\r\n    KeyStorageHelper.setCaseSensitivity = function (enable) {\r\n        if (enable === void 0) {\r\n            enable = LIB_KEY_CASE_SENSITIVE;\r\n        }\r\n        CUSTOM_LIB_KEY_CASE_SENSITIVE = enable;\r\n    };\r\n    KeyStorageHelper.setStorageKeySeparator = function (separator) {\r\n        if (separator === void 0) {\r\n            separator = LIB_KEY_SEPARATOR;\r\n        }\r\n        CUSTOM_LIB_KEY_SEPARATOR = separator;\r\n    };\r\n    return KeyStorageHelper;\r\n}());\r\nexport { KeyStorageHelper };\r\n//# sourceMappingURL=keyStorage.js.map\r\n",null]}